# Display
# user @ machine - blue
# current working directory - yellow
# git branch - red
export PS1="\[\033[36m\]\u@\h\[\033[m\]@\[\033[32m\] \[\033[33;1m\]\w\[\033[31m\] \$(git branch 2>/dev/null | grep '^*' | colrm 1 2) \[\033[1;37m\] \n$ "

# Better terminal
alias cp='cp -iv';
alias mv='mv -iv';
alias mkdir='mkdir -pv';
alias c='clear';
alias ll='ls -FGlAhp';
cd() { builtin cd "$@"; ll; }

# Better Local Development
alias vu='vagrant up';
alias vs='vagrant ssh';
alias what="grep 'alias' ~/.bash_profile";
alias sail='./vendor/bin/sail'

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

function where () {
    if [[ -z "$1" ]]
            then
                grep -rh 'Host ' ##SSH.PATH##
            else
                grep -rh 'Host ' ##SSH.PATH## | grep "$1"
        fi
}

# Colourise grep returns
alias grep='grep --color=auto';
alias egrep='egrep --color=auto';
alias fgrep='fgrep --color=auto';

# Git better
alias co='git commit';
alias s='git status';
alias pu='git pull';
alias nah="git reset --hard; git clean -df;";

function plog () {
    ${p}
    git log --pretty=format:'%H' -n 1 | pbcopy
};

function p () {
    output=$(git push "$@" 2>&1)
    echo "$output" # for user info
    match=`echo "$output" | grep -c 'The current branch .* has no upstream branch'`
    if [[ $match -eq 1 ]] ; then
        echo 'Found no upstream branch warning, trying to create upstream...'
        `echo $output | grep -oh 'use .*$' | cut -c5-`
    fi

    return
}

# Merge in a fresh version of a remote branch to the branch you are current on
function smerge () {
    git pull &>/dev/null

    current_branch=$(git rev-parse --abbrev-ref HEAD 2>&1)
    printf "Smerging $@ into $current_branch\n"

    printf "Pulling down latest version of '$@'\n"

    output=$(git checkout "$@" 2>&1)

    match=`echo "$output" | grep -c 'error: pathspec'`
    if [[ $match -eq 1 ]] ; then
        printf "You gave me a branch that doesnt exist\n"
        return 1
    fi

    git pull &>/dev/null
    git checkout - &>/dev/null

    output=$(git merge --no-ff origin/"$@" 2>&1)
    printf "$output\n" # for user info

    return
}

function each_child_do () {
    if [ -z "$1" ]
        then
            echo "doing nothing beep boop"
        else
            for D in *; do
                if [ -d "${D}" ]; then
                    eval cd "./${D}" >/dev/null # silence the cd output
                    eval $1
                    eval cd "../" >/dev/null # silence the cd output
                fi
            done
    fi
}

export PATH=~/.npm-global/bin:/Users/kyamharris/.composer/vendor/bin:$PATH
export PATH="/usr/local/opt/python/libexec/bin:$PATH"
export PATH=$PATH:/usr/local/go/bin
export GOPATH=$HOME/go;
export PATH=$PATH:$GOPATH/bin;
export PATH="$HOME/.cargo/bin:$PATH"
eval "$(direnv hook bash)"
